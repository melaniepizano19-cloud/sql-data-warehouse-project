-- Database exploration

-- Explore all objects in database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore all columns in database
SELECT * FROM INFORMATION_SCHEMA.TABLES



-- Dimensions exploration

-- Explore all countries our customers come from
SELECT DISTINCT country
FROM gold.dim_customers

-- Explore all product categories then names
SELECT DISTINCT category, subcategory, product_name
FROM gold.dim_products



-- Date Exploration

-- Find data of the first and last order 
-- How many months of sales are available?
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) AS order_range_months
FROM gold.fact_sales

-- Find youngest and oldest customer
SELECT 
MAX(birthdate) AS youngest_customer_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_customer_age,
MIN(birthdate) AS oldest_customer_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_customer_age
FROM gold.dim_customers



-- Measure Exploration

-- Find the total sales
-- Find how many items are sold
-- Find the average selling price
-- Find the total number of orders
-- Find the total number of customers that has placed an order 
SELECT 
SUM(sales_amount) AS total_sales,
SUM(quantity) AS items_sold,
AVG(price) AS avg_selling_price,
COUNT(DISTINCT order_number) AS total_orders,
COUNT(DISTINCT customer_key) AS total_customers_ordering
FROM gold.fact_sales

-- Find the total number of products
SELECT 
COUNT(DISTINCT product_key) AS total_products
FROM gold.dim_products

-- Find the total number of customers
SELECT
COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers

-- Generate a report the shows all key metrics of the business
SELECT 'Total sales' as measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total quantity' as measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Avg. price' as measure_name, AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total orders' as measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total customers ordering' as measure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total products' as measure_name, COUNT(DISTINCT product_key) AS measure_value FROM gold.dim_products
UNION ALL 
SELECT 'Total customers' as measure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.dim_customers



-- Magnitide Analysis

-- Find total number of customers by countries
SELECT
country,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT 
gender,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category 
SELECT
category,
COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the avg. costs in each category?
SELECT
category,
AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

-- What is the total revenue generated for each category?
SELECT
p.category,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- Find the total revenue generated by each customer
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC

-- What is the distributin of sold items across countries?
SELECT
c.country,
SUM(f.quantity) AS total_sold_items
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC



-- Ranking Analysis

-- Which 5 products generate the highest revenue?
SELECT TOP 5
p.product_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

-- What are the 5 worst-performing products in terms of sales?
SELECT TOP 5
p.product_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue ASC

-- Find the top 3 customers with the fewest orders placed
SELECT TOP 3
c.customer_key,
c.first_name,
c.last_name,
COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_orders ASC
